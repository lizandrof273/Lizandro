{"version":3,"sources":["me.png","Header.js","Nav.js","About.js","Contact.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","class","href","Nav","id","target","About","src","me","width","height","Contact","Footer","App","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,gC,uLCG9BC,G,WAAS,kBACtB,yBAAKC,UAAS,oBACV,+CACA,mDACA,mDACA,uBAAGC,MAAM,MAAMC,KAAK,SAApB,eCLSC,EAAM,kBACnB,yBAAKH,UAAS,gBAAkBI,GAAI,QAC5B,4BACE,uBAAGF,KAAK,IAAIG,OAAO,UAAS,yCAC5B,uBAAGH,KAAK,qFAAqFG,OAAO,UAAS,uCAC7G,uBAAGH,KAAK,IAAIG,OAAO,UAAS,6C,gBCJzBC,EAAQ,kBACrB,yBAAKN,UAAS,kBACN,yBAAKO,IAAKC,IAAIC,MAAM,MAAMC,OAAO,MAAMT,MAAO,cAE9C,wCACA,6gBAKA,6TAGA,oRCdKU,EAAU,kBACvB,yBAAKX,UAAS,uBACd,8CACE,+CAAoB,iCAApB,KACA,uBAAGC,MAAM,MAAMC,KAAK,8CAA8CG,OAAO,UAAzE,YACA,uBAAGJ,MAAM,MAAMC,KAAK,kCAAkCG,OAAO,UAA7D,YCLWO,EAAS,kBACtB,yBAAKZ,UAAS,oBACV,oFCoBWa,E,uKAdX,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GATUC,IAAMC,WCIJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1bdf42e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.85dca5e8.png\";","import React, { Component }  from 'react';\nimport './myStyles.css'\n\nexport const Header = () => \n<div className={`header container`}>\n    <h1>Lizandro Franco</h1>\n    <p>Learn more about me!</p>\n    <p>(Under Construction)</p>\n    <a class=\"btn\" href=\"#down\">About me</a>  \n </div>\n\n","import React, { Component }  from 'react';\nimport './myStyles.css'\n\nexport const Nav = () => \n<div className={`nav container`}id =\"down\">\n        <ul>\n          <a href=\"#\" target=\"_blank\"><li>Projects</li></a>\n          <a href=\"https://drive.google.com/file/d/1V92OZer_RUE9qPndAAiJvlZgdFxUak_e/view?usp=sharing\" target=\"_blank\"><li>Resume</li></a>\n          <a href=\"#\" target=\"_blank\"><li>Skill Set</li></a>\n        \n        </ul> \n </div>","import React, { Component }  from 'react';\nimport './myStyles.css'\nimport me from './me.png';\n\nexport const About = () => \n<div className={`main container`}>\n        <img src={me} width='160' height='170' class =\"rcorners4\"/> \n        \n        <h2>About me</h2>\n        <p> I am an aspiring Software Engineer with passion to create. Currently studying computer science \n            and data science at the University of California, Berkeley. I am employed by the school as a Data Analyst, \n            my goal is to use data to help those underrepresented in the university. I held an \n            Internship Facebook under the program \"Facebook University\", where I helped develop an Android application\n            that encourages hanging out with friends that have free time that overlaps with the user.   </p>\n        <p>I love to learn from others and I am always excited to pick up new technologies (frameworks / \n            libraries / languages / etc). I am always fully engaged in meetings and I always take \n            opportunities to lead and bring the team together, in order to insure the best possible product. </p>\n        <p>Outside of bringing to life products I have several hobbies. One thing I love to do is run,\n             one of my dreams is to qualify and run in the Olympics for a marathon. I love creating in\n            general, whether it is a website, a creative video, or music. \n        </p>\n        \n </div>\n\n ","import React, { Component }  from 'react';\nimport './myStyles.css'\n\nexport const Contact = () => \n<div className={`jumbotron container`}>\n<h2>External sites</h2>\n  <p>Learn more about <b>me</b>.</p>\n  <a class=\"btn\" href=\"https://www.linkedin.com/in/lizandrofranco/\" target=\"_blank\">Linkedln</a>\n  <a class=\"btn\" href=\"https://github.com/lizandrof273\" target=\"_blank\">Github</a>\n\n </div>\n","import React, { Component }  from 'react';\nimport './myStyles.css'\n\nexport const Footer = () => \n<div className={`footer container`}>\n    <p>&copy; Lizandro Franco 2020 | Lizandrof273@gmail.com </p>\n </div>\n","import React from 'react';\nimport './App.css';\nimport { Header } from './Header.js';\nimport { Nav } from './Nav.js';\nimport { About } from './About.js';\nimport { Contact } from './Contact.js';\nimport { Footer } from './Footer.js';\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <>\n        <Header />\n        <Nav />\n        <About />\n        <Contact />\n        <Footer /> \n      </> \n      \n      //<div>Under Construction</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//import 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}